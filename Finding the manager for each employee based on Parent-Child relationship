






WITH 
OriginalTablesLevel1 AS 
(
	SELECT																		-- OriginalTablesLevel1
	ROW_NUMBER() OVER (PARTITION BY Employee.BusinessEntityID	ORDER BY Employee.BusinessEntityID ASC, EmployeeDepartmentHistory.StartDate DESC) AS RowNumberRemovingDuplicates
	, Employee.BusinessEntityID	
	, Department.GroupName
	, GroupNameCode = CASE Department.GroupName
		WHEN 'Executive General and Administration' THEN 1
		WHEN 'Inventory Management' THEN 2
		WHEN 'Manufacturing' THEN 3
		WHEN 'Quality Assurance' THEN 4
		WHEN 'Research and Development' THEN 5
		WHEN 'Sales and Marketing' THEN 6
		ELSE 'Error'
		END 
	, EmployeeDepartmentHistory.DepartmentID
	, Department.[Name] AS DeparmentName
	, Employee.JobTitle
	, Employee.OrganizationLevel
	, EmployeeDepartmentHistory.StartDate
	, EmployeeDepartmentHistory.EndDate
	FROM [AdventureWorks2022].[HumanResources].[Employee] AS Employee
	LEFT JOIN [AdventureWorks2022].[HumanResources].[EmployeeDepartmentHistory] AS EmployeeDepartmentHistory
		ON Employee.BusinessEntityID = EmployeeDepartmentHistory.BusinessEntityID
	LEFT JOIN [AdventureWorks2022].[HumanResources].[Department] AS Department
		ON EmployeeDepartmentHistory.DepartmentID = Department.DepartmentID	
	WHERE Employee.BusinessEntityID	<> 234										-- OriginalTablesLevel1
),
RemovingDuplicatesLevel2 AS
(
	SELECT 
		OriginalTablesLevel1.BusinessEntityID									-- RemovingDuplicatesLevel2
		, OriginalTablesLevel1.GroupNameCode
		, OriginalTablesLevel1.GroupName
		, OriginalTablesLevel1.DepartmentID
		, OriginalTablesLevel1.DeparmentName
		, OriginalTablesLevel1.JobTitle
		, OriginalTablesLevel1.OrganizationLevel
		, EmployeeCode = OriginalTablesLevel1.GroupNameCode*10000 + OriginalTablesLevel1.OrganizationLevel
		, ManagerCode = OriginalTablesLevel1.GroupNameCode*10000 + OriginalTablesLevel1.OrganizationLevel - 1
	FROM OriginalTablesLevel1
	WHERE OriginalTablesLevel1.RowNumberRemovingDuplicates = 1					-- RemovingDuplicatesLevel2
		--AND OriginalTablesLevel1.GroupNameCode <> 3
),
SelfJoinBwithDuplicates AS
(
	SELECT																		-- ScalarSubqueryReturnManagerLevel3
		RemovingDuplicatesLevel2.BusinessEntityID
		, RemovingDuplicatesLevel2.JobTitle
		, RemovingDuplicatesLevel2.EmployeeCode
		, ROW_NUMBER() OVER (PARTITION BY RemovingDuplicatesLevel2.EmployeeCode ORDER BY RemovingDuplicatesLevel2.EmployeeCode ASC, RemovingDuplicatesLevel2.BusinessEntityID ASC) AS RowNumberEmployeeCode
	FROM RemovingDuplicatesLevel2												-- ScalarSubqueryReturnManagerLevel3
)
SELECT A.BusinessEntityID 
	, A.JobTitle
	, A.OrganizationLevel
	, A.EmployeeCode
	, A.ManagerCode
	, B.BusinessEntityID
	, B.JobTitle
FROM RemovingDuplicatesLevel2 AS A
LEFT JOIN (SELECT SelfJoinBwithDuplicates.BusinessEntityID
		, SelfJoinBwithDuplicates.JobTitle
		, SelfJoinBwithDuplicates.EmployeeCode
		FROM SelfJoinBwithDuplicates
		WHERE RowNumberEmployeeCode = 1) AS B
ON A.ManagerCode = B.EmployeeCode
ORDER BY A.BusinessEntityID


  -- OUTPUT
BusinessEntityID	JobTitle		OrganizationLevel	EmployeeCode	ManagerCode	BusinessEntityID	JobTitle
1	Chief Executive Officer		NULL	NULL	NULL	NULL	NULL
2	Vice President of Engineering		1	50001	50000	NULL	NULL
3	Engineering Manager		2	50002	50001	2	Vice President of Engineering
4	Senior Tool Designer		3	50003	50002	3	Engineering Manager
5	Design Engineer		3	50003	50002	3	Engineering Manager
6	Design Engineer		3	50003	50002	3	Engineering Manager
7	Research and Development Manager		3	50003	50002	3	Engineering Manager
8	Research and Development Engineer		4	50004	50003	4	Senior Tool Designer


